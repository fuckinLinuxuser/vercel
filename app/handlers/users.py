from aiogram import Router, F # type: ignore
from aiogram.types import (
    Message,
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    WebAppInfo
)
router = Router()

WEB_APP_URL = "https://vercel-gray-gamma.vercel.app/"

@router.message(F.text == "/start")
async def start_handler(message: Message):
    # –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É
    reply_kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏")]
        ],
        resize_keyboard=True
    )

    # Inline-–∫–Ω–æ–ø–∫–∞ –¥–ª—è Mini App (—ç—Ç–æ –Ω–µ–ª—å–∑—è —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ –æ–±—ã—á–Ω—É—é –∫–Ω–æ–ø–∫—É)
    webapp_kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–∞–ø–ø üöÄ", web_app=WebAppInfo(url=WEB_APP_URL))]
        ]
    )

    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ñ–º–∏ –Ω–∞ –º–∏–Ω–∏-–∞–ø–ø –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏ –∑–∞–ø–∏—Å–∏ üëá", reply_markup=reply_kb)
    await message.answer("–û—Ç–∫—Ä–æ–π –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:", reply_markup=webapp_kb)

@router.message(F.text == "üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏")
async def show_posts(message: Message, db):
    rows = await db.fetch(
        "SELECT user_id, data, created_at FROM webapp_data ORDER BY id DESC LIMIT 3"
    )
    if not rows:
        return await message.answer("üì≠ –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π.")

    text = "\n\n".join([
        f"<b>{r['created_at']:%d-%m}</b>\n<code>{r['data']}</code>"
        for r in rows
    ])
    await message.answer(f"üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –∑–∞–ø–∏—Å–∏:\n\n{text}")
